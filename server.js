/******************************************************
 * PLEASE DO NOT EDIT THIS FILE
 * the verification process may break
 * ***************************************************/
 
const bGround = require('fcc-express-bground');
const myApp = require('./myApp');
const express = require('express');
const app = express();

if (!process.env.DISABLE_XORIGIN) {
  app.use((req, res, next) => {
    const allowedOrigins = ['https://narrow-plane.gomix.me', 'https://www.freecodecamp.com','*'];
    const origin = req.headers.origin || '*';
    if(!process.env.XORIG_RESTRICT || allowedOrigins.indexOf(origin) > -1){
         console.log(origin);
         res.setHeader('Access-Control-Allow-Origin', origin);
         res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
    }
    next();
  });
}

// log ip function
const logMiddleware = (req,res,next) => {
  var string = req.method + " " + req.path + " - " + req.ip;
  console.log(string)
  next();
}
// Implementing middleware
app.use(logMiddleware)
// Static Route
app.use("/public",express.static('public'));

// GET / route to serve html
app.get("/",(req,res)=>{
  const indexHTML = __dirname + '/views/index.html'
  res.sendFile(indexHTML);
});

// Serve JSON on a specific route
app.get("/json",(req,res)=>{
  // send caps if MESSAGE_STYLE is available in .env
  let response;
  // 
  if(process.env.MESSAGE_STYLE === "uppercase"){
    response = "Hello json".toUpperCase();
  } else {
    response= "Hello json"
  }
  res.json(({"message": response}))
});

// Create a Time Server
const timeMiddleware = (req, res, next) => {
  req.time = new Date().toString();
  next();
};

app.get("/now", timeMiddleware, (req, res) => {
  res.send({
    time: req.time
  });
});

console.log("Hello World");
const port = process.env.PORT || 3000;
bGround.setupBackgroundApp(app, myApp, __dirname).listen(port, () => {
  bGround.log(`Node is listening on port ${port}...`);
});

/******************************************************
 * PLEASE DO NOT EDIT THIS FILE
 * the verification process may break
 * ***************************************************/

